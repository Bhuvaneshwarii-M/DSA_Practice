// Java code for checking list is pelindrom or not
// using stack

import java.util.Stack;
class Node {
    int data;
    Node next;
    Node(int d) {
        data = d;
        next = null;
    }
}

class GfG {
  
    // Function to check if the linked list
      // is palindrome or not
    static boolean isPalindrome(Node head) {
        Node currNode = head;
        Stack<Integer> s = new Stack<>();

        // Push all elements of the list to the stack
        while (currNode != null) {
            s.push(currNode.data);
            currNode = currNode.next;
        }

        // Iterate in the list again and check
          // by popping from the stack
        while (head != null) {
          
            // Get the topmost element
            int c = s.pop();

            // Check if data is not same as
              // popped element
            if (head.data != c) {
                return false;
            }

            // Move ahead
            head = head.next;
        }

        return true;
    }

    public static void main(String[] args) {
      
        // Linked list : 1->2->3->2->1
        Node head = new Node(1);
        head.next = new Node(2);
        head.next.next = new Node(3);
        head.next.next.next = new Node(2);
        head.next.next.next.next = new Node(1);

        boolean result = isPalindrome(head);

        if (result)
            System.out.println("true");
        else
            System.out.println("false");
    }
}
